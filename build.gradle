plugins {
    id 'fabric-loom' version '1.2-SNAPSHOT'
    id 'io.github.juuxel.loom-quiltflower' version '1.8.0'
    id 'maven-publish'
}

sourceCompatibility = JavaVersion.VERSION_17
targetCompatibility = JavaVersion.VERSION_17

archivesBaseName = project.archives_base_name
version = "${project.mod_version}+${project.minecraft_version}"
group = project.maven_group

repositories {
    mavenLocal()

    maven {
        // name = "GitHubPackages"
        url = uri("https://maven.pkg.github.com/mschae23/codec-config-api")
        credentials {
            username = project.findProperty("gpr.user") ?: System.getenv("GITHUB_USERNAME")
            password = project.findProperty("gpr.key") ?: System.getenv("GITHUB_TOKEN")
        }
    }

    maven {
        name "Nucleoid"
        url "https://maven.nucleoid.xyz/"
    }

    maven { url 'https://oss.sonatype.org/content/repositories/snapshots' }
    mavenCentral()
}

dependencies {
    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
    modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

    [
        "fabric-api-base",
        "fabric-registry-sync-v0",
        "fabric-command-api-v2",
        "fabric-entity-events-v1",
        "fabric-lifecycle-events-v1",
        "fabric-message-api-v1",
        "fabric-events-interaction-v0"
    ].forEach { modImplementation fabricApi.module(it, project.fabric_api_version) }

    modImplementation "de.martenschaefer:codec-config-api:${project.codec_config_api_version}"
    include "de.martenschaefer:codec-config-api:${project.codec_config_api_version}"

    modImplementation "net.luckperms:api:${project.luckperms_api_version}"
    modImplementation "me.lucko:fabric-permissions-api:${project.permission_api_version}"

    // modImplementation "eu.pb4:placeholder-api:${project.placeholder_api_version}"
    // include "eu.pb4:placeholder-api:${project.placeholder_api_version}"
}

processResources {
    inputs.property 'version', project.version

    filesMatching('fabric.mod.json') {
        expand 'version': project.version
    }
}

tasks.withType(JavaCompile).configureEach {
    // Minecraft 1.18 (1.18-pre2) upwards uses Java 17.
    it.options.release = 17
}

loom {
    accessWidenerPath = file('src/main/resources/regionprotection.accesswidener')
}

java {
    withSourcesJar()
}

jar {
    from('LICENSE') {
        rename { "${it}_${project.archivesBaseName}"}
    }
}

publishing {
    publications {
        gpr(MavenPublication) {
            from components.java
        }
    }

    repositories {
        maven {
            name = "GitHubPackages"
            url = uri("https://maven.pkg.github.com/mschae23/minecraft-server-utils")
            credentials {
                username = project.findProperty("gpr.user") ?: System.getenv("GITHUB_USERNAME")
                password = project.findProperty("gpr.key") ?: System.getenv("GITHUB_TOKEN")
            }
        }
    }
}
